{"version":3,"sources":["actions/index.js","components/Cart/Cart.js","components/AdminLogin/AdminLogin.js","components/Navbar/Navbar.js","components/ProductList/ProductList.js","components/Restricted/Restricted.js","components/Admin/Admin.js","components/UserDetail/UserDetail.js","App.js","reportWebVitals.js","reducers/cart.js","reducers/cartItems.js","reducers/index.js","store.js","index.js"],"names":["removeProductId","product_id","type","useStyles","makeStyles","theme","rightNav","flexGrow","textAlign","root","width","maxWidth","backgroundColor","palette","background","paper","connect","state","productsInCart","cart","data","props","classes","useState","cartTotal","setCartTotal","cartChanged","setCartChanged","calculateCartTotal","a","length","total","reduce","acc","item","price","toFixed","deleteFromCart","productId","dispatch","useEffect","Dialog","onClose","close","aria-labelledby","open","style","padding","paddingLeft","paddingTop","DialogTitle","id","List","className","map","product","ListItem","ListItemAvatar","Avatar","height","src","image","alt","title","ListItemText","primary","name","secondary","cursor","marginLeft","onClick","Divider","variant","component","margin","fontSize","marginRight","Typography","spacing","withRouter","email","setEmail","password","setPassword","error","setError","addToast","useToasts","noValidate","autoComplete","Grid","container","xs","TextField","label","size","onChange","e","target","value","paddingBottom","color","Button","preventDefault","history","push","sessionStorage","setItem","appearance","autoDismiss","autoDismissTimeout","modal","display","alignItems","justifyContent","border","boxShadow","shadows","StyledBadge","withStyles","badge","right","top","Badge","numberOfItems","openCartModal","setOpenCartModal","openLoginModal","setOpenLoginModal","AppBar","position","Toolbar","getItem","badgeContent","verticalAlign","formControl","minWidth","selectEmpty","marginTop","cartItems","productList","setProductList","categoryList","setCategoryList","filter","setFilter","titleTextStyle","WebkitBoxOrient","WebkitLineClamp","overflow","textOverflow","fontWeight","descTextStyle","fetch","then","res","json","result","float","Select","labelId","filterVal","displayEmpty","MenuItem","category","sm","md","lg","Card","CardActionArea","CardMedia","objectFit","CardContent","gutterBottom","description","CardActions","includes","product_name","product_price","product_image","addProductId","addProductToCart","Restricted","StyledTableCell","head","common","black","white","body","TableCell","StyledTableRow","action","hover","TableRow","table","users","setUsers","getUsers","response","setUserDetail","user","JSON","stringify","TableContainer","Paper","Table","aria-label","TableHead","align","TableBody","scope","picture","thumbnail","first","last","moment","dob","date","format","location","street","number","city","country","postcode","login","uuid","UserDetail","userData","setUserData","parse","borderRadius","media","large","App","placement","exact","path","ProductList","Admin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0204b68e.chunk.js","sourcesContent":["const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const addToCart = (product_id, product_name, product_price, product_image) => ({\r\n    type: ADD_TO_CART,\r\n    product_id,\r\n    product_name,\r\n    product_price,\r\n    product_image\r\n});\r\n\r\nconst REMOVE_FROM_CART = 'REMOVE_FROM_CART';\r\nexport const removeFromCart = (product_id) => ({\r\n    type: REMOVE_FROM_CART,\r\n    product_id\r\n});\r\n\r\nconst ADD_PRODUCT_ID = 'ADD_PRODUCT_ID';\r\nexport const addProductId = (product_id) => ({\r\n    type: ADD_PRODUCT_ID,\r\n    product_id\r\n});\r\n\r\nconst REMOVE_PRODUCT_ID = 'REMOVE_PRODUCT_ID';\r\nexport const removeProductId = (product_id) => ({\r\n    type: REMOVE_PRODUCT_ID,\r\n    product_id\r\n});","import React, { useState, useEffect } from 'react'\r\nimport {List,\r\nListItem, ListItemAvatar, Avatar, ListItemText,\r\nDivider, Dialog, DialogTitle } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { connect } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport { removeFromCart, removeProductId } from '../../actions'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    rightNav: {\r\n        flexGrow: 1,\r\n        textAlign: 'right'\r\n    },\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n\r\nconst Cart = (props) => {\r\n    const classes = useStyles();\r\n    const [cartTotal, setCartTotal] = useState(0)\r\n    const [cartChanged, setCartChanged] = useState(false)\r\n\r\n    const calculateCartTotal = async () => {\r\n        if(props.productsInCart.length > 0) {\r\n            let total = props.productsInCart.reduce((acc, item) => (\r\n                acc + item.price\r\n              ), 0).toFixed(2)\r\n            setCartTotal(total)\r\n        }\r\n    }\r\n\r\n    const deleteFromCart = async (productId) => {\r\n        if(productId) {\r\n            await props.dispatch(removeFromCart(productId))\r\n            props.dispatch(removeProductId(productId))\r\n            setCartChanged(!cartChanged)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        calculateCartTotal();\r\n    }, [cartChanged])// eslint-disable-line\r\n    return (\r\n        <div>\r\n            <Dialog onClose={() => props.close(false)} aria-labelledby=\"simple-dialog-title\" open={props.open}>\r\n                <div style={{padding: '20px', paddingLeft: '0px',paddingTop: '0px'}}>\r\n                    <DialogTitle id=\"simple-dialog-title\">Cart Items</DialogTitle>\r\n                    {props.productsInCart.length > 0?\r\n                    <List className={classes.root}>\r\n                    {props.productsInCart.map((product) => (\r\n                        <div key={product.id}>\r\n                            <ListItem>\r\n                                <ListItemAvatar>\r\n                                    <Avatar>\r\n                                        <img style={{height: '100%', width: '100%'}} src={product.image} alt={product.title}/>\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary={product.name} secondary={'$'+product.price} />\r\n                                <ClearIcon style={{cursor: 'pointer', marginLeft: '20px'}} onClick={() => deleteFromCart(product.id)}/>\r\n                            </ListItem>\r\n                            <Divider variant=\"inset\" component=\"li\" />\r\n                        </div>\r\n                    ))}\r\n                    </List>:<p style={{margin: '20px', fontSize: '12px', marginLeft: '50px', marginRight: '50px'}}>No products in cart</p>}\r\n                    <Typography variant=\"h6\" style={{textAlign: 'right'}} className={classes.title}>\r\n                        {props.productsInCart.length > 0?'Cart total: $'+cartTotal:'Cart total: $0'}\r\n                    </Typography>\r\n                </div>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    productsInCart: state.cart.data,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Cart);\r\n","import React, { useState } from 'react'\r\nimport { Dialog, DialogTitle, TextField, Button, Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { withRouter } from 'react-router';\r\nimport { useToasts } from 'react-toast-notifications'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(3),\r\n        width: '25ch',\r\n      },\r\n    },\r\n}));\r\n\r\nconst AdminLogin = (props) => {\r\n    const classes = useStyles();\r\n    const [email, setEmail] = useState(null)\r\n    const [password, setPassword] = useState(null)\r\n    const [error, setError] = useState(null)\r\n    const { addToast } = useToasts()\r\n\r\n    const Login = (e) => {\r\n        e.preventDefault();\r\n        if(!email && !password) {\r\n            setError(\"Please fill all the fields\")\r\n        } else if(!email) {\r\n            setError(\"Please enter your email\")\r\n        } else if(!password) {\r\n            setError(\"Please enter your password\")\r\n        } else {\r\n            if(email === 'admin@xyz.com' && password === 'Admin_007') {\r\n                props.history.push('/admin')\r\n                sessionStorage.setItem('isAuthenticated', 'yes')\r\n                props.close(false)\r\n                setError(\"\")\r\n                addToast('Successfully logged in', {\r\n                    appearance: 'success',\r\n                    autoDismiss: true,\r\n                    autoDismissTimeout: 2000\r\n                })\r\n\r\n            } else {\r\n                setError(\"Invalid credentials\")\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <Dialog onClose={() => props.close(false)} aria-labelledby=\"simple-dialog-title\" open={props.open}>\r\n            <DialogTitle id=\"simple-dialog-title\">Login as Admin</DialogTitle>\r\n            <form className={classes.root} noValidate autoComplete=\"off\">\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <TextField id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" size=\"small\" onChange={e => setEmail(e.target.value)}/>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField id=\"outlined-basic1\" label=\"Password\" variant=\"outlined\" type=\"password\" size=\"small\" onChange={e => setPassword(e.target.value)}/>\r\n                    </Grid>\r\n                    <Grid item xs={12} style={{textAlign: 'center', paddingTop: 0, paddingBottom: 0}}> \r\n                        <p style={{color: 'red', fontSize: '12px'}}>{error}</p>\r\n                    </Grid>\r\n                    <Grid item xs={12}> \r\n                        <Button type=\"submit\" onClick={Login} style={{width: '100%', backgroundColor: '#9c27b0'}} variant=\"contained\" color=\"primary\">\r\n                            Login\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(AdminLogin);\r\n","import React, { useState } from 'react'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LocalMallTwoToneIcon from '@material-ui/icons/LocalMallTwoTone';\r\nimport ShoppingCartTwoToneIcon from '@material-ui/icons/ShoppingCartTwoTone';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Cart from '../Cart/Cart'\r\nimport AdminLogin from '../AdminLogin/AdminLogin'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    rightNav: {\r\n      flexGrow: 1,\r\n      textAlign: 'right'\r\n    },\r\n    title: {\r\n      textAlign: 'left',\r\n      marginRight: '5px'\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\nconst StyledBadge = withStyles((theme) => ({\r\n    badge: {\r\n      right: -3,\r\n      top: 13,\r\n      border: `2px solid ${theme.palette.background.paper}`,\r\n      padding: '0 4px',\r\n    },\r\n  }))(Badge);\r\n\r\nconst Navbar = (props) => {\r\n    const classes = useStyles();\r\n    const [openCartModal, setOpenCartModal] = useState(false)\r\n    const [openLoginModal, setOpenLoginModal] = useState(false)\r\n\r\n    const Logout = () => {\r\n        props.history.push('/')\r\n        sessionStorage.setItem('isAuthenticated', 'no')\r\n    }\r\n    return (\r\n        <div>\r\n            <AppBar position=\"static\" style={{backgroundColor:'#9c27b0'}}>\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                    E-commerce\r\n                    </Typography>\r\n                    <LocalMallTwoToneIcon />\r\n                    {sessionStorage.getItem('isAuthenticated') === 'yes'?\r\n                    <div className={classes.rightNav}>\r\n                        <Button color=\"inherit\" style={{marginRight: '10px'}} onClick={Logout}>Logout</Button></div>:\r\n                        <div className={classes.rightNav}>\r\n                            <Button color=\"inherit\" style={{marginRight: '10px'}} onClick={() => setOpenLoginModal(true)}>Login</Button>\r\n                            <StyledBadge badgeContent={props.numberOfItems} color=\"secondary\">\r\n                                <ShoppingCartTwoToneIcon style={{verticalAlign: 'middle', cursor: 'pointer'}} onClick={() => setOpenCartModal(true)}/>\r\n                            </StyledBadge>\r\n                        </div>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n            {openCartModal?\r\n                <Cart open={openCartModal} close={setOpenCartModal}/>:null\r\n            }\r\n            {openLoginModal?\r\n                <AdminLogin open={openLoginModal} close={setOpenLoginModal}/>:null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    numberOfItems: state.cart.data.length,\r\n})\r\n\r\nexport default connect(mapStateToProps)(withRouter((Navbar)));\r\n","import React, { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {connect} from 'react-redux'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport './ProductList.css'\r\nimport {addToCart, addProductId} from '../../actions'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst ProductList = (props) => {\r\n    const [productList, setProductList] = useState([])\r\n    const [categoryList, setCategoryList] = useState([])\r\n    const [filter, setFilter] = useState('all')\r\n    const classes = useStyles();\r\n    const fetchProducts = () => {\r\n        fetch('https://fakestoreapi.com/products')\r\n        .then(res => res.json())\r\n        .then(result => {\r\n            setProductList(result)\r\n        })\r\n    }\r\n    const { addToast } = useToasts()\r\n\r\n    const fetchCategories = () => {\r\n        fetch('https://fakestoreapi.com/products/categories')\r\n        .then(res=>res.json())\r\n        .then(res=>setCategoryList(res))\r\n    }\r\n\r\n    const titleTextStyle = {\r\n        display: '-webkit-box',\r\n        WebkitBoxOrient: 'vertical',  \r\n        WebkitLineClamp: 2,\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        height: '3.1rem',\r\n        fontWeight: 'bold'\r\n    }\r\n\r\n    const descTextStyle = {\r\n        display: '-webkit-box',\r\n        WebkitBoxOrient: 'vertical',  \r\n        WebkitLineClamp: 4,\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        height: '4.9rem',\r\n        marginTop: '10px'\r\n    }\r\n\r\n    const handleFilterChange = (filterVal) => {\r\n        setFilter(filterVal)\r\n        if(filterVal !== filter && filterVal !== 'all') {\r\n            fetch('https://fakestoreapi.com/products/category/'+filterVal)\r\n            .then(res=>res.json())\r\n            .then(result=>setProductList(result))\r\n        }\r\n    }\r\n\r\n    const addProductToCart = (product) => {\r\n        props.dispatch(addToCart(product.id, product.title, product.price, product.image))\r\n        props.dispatch(addProductId(product.id))\r\n        addToast('Product added to cart', {\r\n            appearance: 'success',\r\n            autoDismiss: true,\r\n            autoDismissTimeout: 2000\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        sessionStorage.setItem('isAuthenticated','no')\r\n        if(filter === 'all') {\r\n            fetchProducts();\r\n            fetchCategories();\r\n        }\r\n    }, [filter])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Typography variant=\"subtitle1\" style={{fontWeight: 'bold', margin: '20px 24px', display:'inline-block',float:'left'}}>\r\n                    {'Products('+productList.length+')'}\r\n                </Typography>\r\n                <div className='filterDiv' style={{display: 'inline-block', marginRight: '24px'}}>\r\n                    <Typography variant=\"subtitle2\" style={{display: 'inline', marginRight: '10px', color: '#9c27b0'}}>\r\n                        Filter by category\r\n                    </Typography>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-placeholder-label-label\"\r\n                        id=\"demo-simple-select-placeholder-label\"\r\n                        value={filter}\r\n                        onChange={(e) => handleFilterChange(e.target.value)}\r\n                        displayEmpty\r\n                        className={classes.selectEmpty}\r\n                        >\r\n                        <MenuItem value=\"all\">\r\n                            All\r\n                        </MenuItem>\r\n                        {categoryList.map((category) => (\r\n                            <MenuItem key={category} value={category}>\r\n                                {category}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </div>\r\n            </div>\r\n            <Grid container spacing={3} style={{margin: '0', padding: '10px', width: '100%'}}>\r\n            {productList.map((product) => (\r\n                <Grid item xs={12} sm={6} md={4} lg={3} key={product.id}>\r\n                <Card style={{padding: '10px'}}>\r\n                <CardActionArea>\r\n                    <div style={{height: '150px'}}>\r\n                        <CardMedia\r\n                        component=\"img\"\r\n                        alt=\"product\"\r\n                        style={{ objectFit: 'contain'}}\r\n                        height=\"100%\"\r\n                        width=\"100%\"\r\n                        image={product.image}\r\n                        title={product.title}\r\n                        />\r\n                    </div>\r\n                    <CardContent>\r\n                    <Typography gutterBottom variant=\"subtitle1\" style={titleTextStyle}>\r\n                        {product.title}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" style={descTextStyle}>\r\n                        {product.description}\r\n                    </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n                <CardActions>\r\n                    <Grid item xs={8} style={{textAlign: 'left'}}>\r\n                        {props.productsInCart.includes(product.id)?\r\n                            <div>\r\n                            <Button size=\"small\" color=\"primary\">\r\n                            ADDED TO CART\r\n                            </Button><CheckCircleIcon style={{verticalAlign: 'middle', color: '#8bc34a'}}/></div>:\r\n                            <Button size=\"small\" color=\"primary\" onClick={() => addProductToCart(product)}>\r\n                            ADD TO CART\r\n                            </Button>\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Typography variant=\"subtitle2\" style={{textAlign: 'right'}}>\r\n                            {'$'+product.price}\r\n                        </Typography>\r\n                    </Grid>\r\n                </CardActions>\r\n                </Card>\r\n                </Grid>\r\n            ))}\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    productsInCart: state.cartItems.data,\r\n})\r\n\r\nexport default connect(mapStateToProps)(ProductList)\r\n","import React from 'react'\r\n\r\nconst Restricted = () => {\r\n    return (\r\n        <div>\r\n            <h2>You need to login to access this page</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Restricted\r\n","import React, { useState, useEffect } from 'react'\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport moment from 'moment'\r\nimport {withRouter} from 'react-router-dom'\r\nimport Restricted from '../Restricted/Restricted'\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 12,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n      width: 'content'\r\n    },\r\n});\r\n\r\nconst Admin = (props) => {\r\n    const classes = useStyles();\r\n    const [users, setUsers] = useState([])\r\n    const getUsers = async () => {\r\n        await fetch('https://randomuser.me/api/?results=20')\r\n            .then(res=>res.json())\r\n            .then(response=>{setUsers(response['results'])\r\n        })\r\n    }\r\n\r\n    const setUserDetail = async (user) => {\r\n        let data = [];\r\n        data = JSON.stringify(user);\r\n        await sessionStorage.setItem('userDetails', data)\r\n        props.history.push('/user-detail')\r\n    }\r\n    useEffect(() => {\r\n        getUsers();\r\n    }, [])\r\n    return (\r\n        <div>\r\n            {sessionStorage.getItem('isAuthenticated') === 'yes'?\r\n            <div>\r\n            <h3 style={{textAlign:'left', marginLeft: '24px'}}>Customer info</h3>\r\n            <TableContainer component={Paper}>\r\n            <Grid item xs={12}>\r\n                <Table className={classes.table} aria-label=\"customized table\">\r\n                    <TableHead>\r\n                    <TableRow>\r\n                        <StyledTableCell>Photo</StyledTableCell>\r\n                        <StyledTableCell align=\"left\">First Name</StyledTableCell>\r\n                        <StyledTableCell align=\"left\">Last Name</StyledTableCell>\r\n                        <StyledTableCell align=\"left\">Email</StyledTableCell>\r\n                        <StyledTableCell align=\"left\">DOB</StyledTableCell>\r\n                        <StyledTableCell align=\"left\">Address</StyledTableCell>\r\n                        <StyledTableCell align=\"left\">Pincode</StyledTableCell>\r\n                        <StyledTableCell align=\"left\">CTA</StyledTableCell>\r\n                    </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {users.map((user) => (\r\n                        <StyledTableRow key={user.login.uuid}>\r\n                        <StyledTableCell component=\"th\" scope=\"row\">\r\n                            <ListItemAvatar>\r\n                                <Avatar>\r\n                                    <img style={{height: '100%', width: '100%'}} src={user.picture.thumbnail} alt='img'/>\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                        </StyledTableCell>\r\n                        <StyledTableCell align=\"left\">{user.name.first}</StyledTableCell>\r\n                        <StyledTableCell align=\"left\">{user.name.last}</StyledTableCell>\r\n                        <StyledTableCell align=\"left\">{user.email}</StyledTableCell>\r\n                        <StyledTableCell align=\"left\">{moment(user.dob.date).format('MM/DD/YYYY')}</StyledTableCell>\r\n                        <StyledTableCell align=\"left\">{user.location.street.number+', '+user.location.street.name+', '+user.location.city+', '+user.location.state+', '+user.location.country}</StyledTableCell>\r\n                        <StyledTableCell align=\"left\">{user.location.postcode}</StyledTableCell>\r\n                        <StyledTableCell align=\"left\">\r\n                        <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={() => setUserDetail(user)}>\r\n                            View Details\r\n                        </Button>\r\n                        </StyledTableCell>\r\n                        </StyledTableRow>\r\n                    ))}\r\n                    </TableBody>\r\n                </Table>\r\n                </Grid>\r\n                </TableContainer></div>:<Restricted />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Admin)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport moment from 'moment'\r\nimport Restricted from '../Restricted/Restricted'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      maxWidth: 345,\r\n      display: 'inline-block'\r\n    },\r\n});\r\n\r\nconst UserDetail = (props) => {\r\n    const classes = useStyles();\r\n    const [userData, setUserData] = useState([])\r\n\r\n    useEffect(() => {\r\n        let data = [];\r\n        data[0] = JSON.parse(sessionStorage.getItem('userDetails'))\r\n        setUserData(data)\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {sessionStorage.getItem('isAuthenticated') === 'yes'?\r\n            <div>\r\n            <h1>User details</h1>\r\n            {userData.map((user) => (\r\n            <Card className={classes.root}>\r\n                <CardActionArea>\r\n                        <CardMedia\r\n                        style={{height: '128px', width: '128px', display: 'inline-block', borderRadius: '50%', marginTop: '10px'}}\r\n                        className={classes.media}\r\n                        image={user.picture.large}\r\n                        title={user.name.first+' '+user.name.last}\r\n                        />\r\n                    <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        {user.name.title+'. '+user.name.first+' '+user.name.last}\r\n                    </Typography>\r\n                    <Typography style={{paddingTop:'10px'}} variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        Email: {user.email}\r\n                    </Typography>\r\n                    <Typography style={{paddingTop:'10px'}} variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        DOB: {moment(user.dob.date).format('MM/DD/YYYY')}\r\n                    </Typography>\r\n                    <Typography style={{paddingTop:'10px'}} variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        Address: {user.location.street.number+', '+user.location.street.name+', '+user.location.city+', '+user.location.state+', '+user.location.country}\r\n                    </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n            </Card>\r\n            ))}\r\n            </div>:<Restricted/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserDetail\r\n","import './App.css';\nimport Navbar from './components/Navbar/Navbar'\nimport ProductList from './components/ProductList/ProductList'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Admin from './components/Admin/Admin'\nimport UserDetail from './components/UserDetail/UserDetail'\nimport { ToastProvider } from 'react-toast-notifications'\n\nfunction App() {\n  return (\n    <ToastProvider placement='top-center'>\n    <div className=\"App\">\n      <Router>\n      <Navbar />\n        <Switch>\n          <Route exact path='/e-commerce' component={ProductList} />\n          <Route exact path='/admin' component={Admin} />\n          <Route exact path='/user-detail' component={UserDetail} />\n        </Switch>\n      </Router>\n    </div>\n    </ToastProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    data:[]\r\n};\r\n\r\nconst cart = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case 'ADD_TO_CART':\r\n            return {\r\n                ...state,\r\n                data: [\r\n                    ...state.data,\r\n                    {\r\n                        id:action.product_id,\r\n                        name:action.product_name,\r\n                        price:action.product_price,\r\n                        image:action.product_image\r\n                    }\r\n                ]\r\n            }\r\n        case 'REMOVE_FROM_CART':\r\n            const productsInCart = state.data.filter((product) => product.id !== action.product_id)\r\n            return {\r\n                ...state,\r\n                data: productsInCart\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default cart;\r\n","const initialState = {\r\n    data:[]\r\n};\r\n\r\nconst cartItems = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case 'ADD_PRODUCT_ID':\r\n            return {\r\n                ...state,\r\n                data: [...state.data,action.product_id]\r\n            }\r\n        case 'REMOVE_PRODUCT_ID':\r\n            const productsInCart = state.data.filter((id) => id !== action.product_id)\r\n            return {\r\n                ...state,\r\n                data: productsInCart\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default cartItems;\r\n","import { combineReducers } from 'redux'\r\nimport cart from './cart'\r\nimport cartItems from './cartItems'\r\n\r\nconst rootReducer = combineReducers({\r\n    cart,\r\n    cartItems\r\n});\r\n\r\nexport default rootReducer;","import { createStore } from 'redux'\r\nimport rootReducer from './reducers'\r\n\r\nconst store = createStore(rootReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}